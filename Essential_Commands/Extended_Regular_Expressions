📘 Extended Regular Expressions (ERE) with grep -E or egrep
🔍 What Are Extended Regular Expressions?
Extended regex lets you write powerful search patterns without escaping everything.

✅ Easier syntax
✅ Cleaner expressions
✅ More powerful pattern matching

🆚 Basic vs Extended Regex
Feature	Basic Regex (grep)	Extended Regex (grep -E or egrep)
+, ?, {}	Need to escape with \	Used as-is
Cleaner syntax	❌ No	✅ Yes
Easier for complex patterns	❌	✅

📦 Use Extended Regex via:
bash
Copy
Edit
grep -E 'pattern' file.txt
or simply:

bash
Copy
Edit
egrep 'pattern' file.txt
🧱 ERE Building Blocks (Visual Table)
Symbol	Meaning	Example	Matches
+	One or more	0+	0, 0000
?	Zero or one	ed?	ed, e
{n}	Exactly n times	0{3}	000
{n,}	n or more times	0{3,}	000, 00000
{,n}	Up to n times	0{,3}	0, 00, 000
{n,m}	n to m times	0{1,3}	0, 00, 000
`	`	OR	`cat
()	Grouping (subexpression)	(ab)+	ab, abab, ababab
[]	Set of characters	[abc]	a, b, c
[^]	NOT these characters	[^a-z]	Anything except lowercase

✅ Common Use Cases
1️⃣ Match: Three or more zeros
bash
Copy
Edit
egrep '0{3,}' file.txt
2️⃣ Match: One followed by 0–3 zeros
bash
Copy
Edit
egrep '10{,3}' file.txt
3️⃣ Match: Exactly three zeros
bash
Copy
Edit
egrep '0{3}' file.txt
4️⃣ Match: Optional character
bash
Copy
Edit
egrep 'disable?d' file.txt
✅ Matches: disabled, disable
❌ Doesn’t match: disabling

5️⃣ Match: Enabled or Disabled
bash
Copy
Edit
egrep -i 'enable?d|disable?d' file.txt
🧙‍♂️ Use Ranges and Sets
Pattern	Meaning
[a-z]	any lowercase letter
[0-9]	any digit
[abc123]	any character listed
[^a-z]	NOT a lowercase letter

6️⃣ Match: cat or cut
bash
Copy
Edit
egrep 'c[au]t' file.txt
7️⃣ Match: Device names like /dev/sda1, /dev/sdb
bash
Copy
Edit
egrep '/dev/[a-z]+[0-9]?' file.txt
[a-z]+ → one or more lowercase letters

[0-9]? → optional digit at the end

🧠 Subexpressions (Group + Repeat)
8️⃣ Match: Multiple dev devices like /dev/t0p0, /dev/sda1
bash
Copy
Edit
egrep '/dev/[a-z]+[0-9]?([a-z]+[0-9]?)*' file.txt
Group: ([a-z]+[0-9]?)

Repeat that group 0 or more times: *

🚫 Negative Matching with Sets
9️⃣ Match: https NOT followed by :
bash
Copy
Edit
egrep 'https[^:]' file.txt
[^:] = not followed by colon
✅ Matches: httpsx, https
❌ Doesn’t match: https:

🔧 More Negation Tricks
10️⃣ Match http NOT followed by s or :
bash
Copy
Edit
egrep 'http[^s:]' file.txt
🧪 Practice = Confidence
There are often multiple regex solutions to the same problem.

Start simple, then add layers as you need.

🔁 Regex Isn't Just for grep
It also works with:

sed

awk

vim or nano search

Programming (Python, JavaScript, etc.)

Try out your regex on:

🌐 https://regex101.com
🌐 https://regextester.com

