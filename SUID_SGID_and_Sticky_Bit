🔐 Special Permissions in Linux: SUID, SGID & Sticky Bit
1. 📍 Overview
Special Bit	Applies To	Purpose
SUID	Executable files	Run file as the file owner's user ID
SGID	Files & Directories	Run file as the file group’s GID / force group ownership for new files
Sticky Bit	Directories only	Restrict file deletion to owner or root

2. 🧍 Set User ID (SUID)
🔑 Purpose:
Run executable as the file owner, not as the executing user.

🛠 Example:
bash
Copy
Edit
chmod 4764 suid_file
4 (SUID) as the first digit.

764 sets normal permissions.

🔍 View:
bash
Copy
Edit
ls -l
If x is not set, shows: -rwS------

If x is set, shows: -rws------

💡 Real-world Example:
/usr/bin/passwd uses SUID to let users change their passwords (modifies /etc/shadow as root).

3. 👥 Set Group ID (SGID)
🔑 Purpose:
On files: Run as the file’s group.

On directories: New files inherit the directory’s group.

🛠 Example:
bash
Copy
Edit
chmod 2764 sgid_file
2 (SGID) as the first digit.

🔍 View:
Without execute: -rw-r-S---

With execute: -rw-r-s---

4. 🔍 Finding Files with SUID or SGID
SUID:
bash
Copy
Edit
find . -perm -4000
SGID:
bash
Copy
Edit
find . -perm -2000
Both:
bash
Copy
Edit
find . -perm -6000
5. 📌 Sticky Bit
🔑 Purpose:
Restrict who can delete files in a shared directory.

Only the file owner or root can delete their files.

🛠 Examples:
bash
Copy
Edit
mkdir sticky_dir
chmod +t sticky_dir          # Quick method
chmod 1777 sticky_dir        # Full method
1 (Sticky bit) as the first digit.

🔍 View:
bash
Copy
Edit
ls -ld sticky_dir
With execute: drwxrwxrwt (lowercase t)

Without execute: drwxrwxrwT (uppercase T)

💡 Common Usage:
/tmp directory uses sticky bit so users can't delete each other’s temp files.

6. 🔢 Octal Summary
Octal Prefix	Meaning
4xxx	SUID
2xxx	SGID
1xxx	Sticky

You can combine:

SUID + SGID: 6xxx

All 3: 7xxx

